angular.module("ngUrlParser",[]).factory("urlParser",function(){"use strict";return{parse:function(t){return function(t){var r,e,o,n=document.createElement("a"),a={};for(n.href=t,r=n.search.replace(/^\?/,"").split("&"),o=0;o<r.length;o++)if(e=r[o].split("="),a.hasOwnProperty(e[0])){var s,i=a[e[0]];angular.isArray(i)?s=i:(s=[]).push(i),s.push(e[1]),a[e[0]]=s}else a[e[0]]=e[1];return{protocol:n.protocol,host:n.host,hostname:n.hostname,port:n.port,pathname:n.pathname,search:n.search,searchObject:a,hash:n.hash}}(t=t||window.location.href)},getProtocol:function(t){return t=t||window.location.href,this.parse(t).protocol},getHost:function(t){return t=t||window.location.href,this.parse(t).host},getHostname:function(t){return t=t||window.location.href,this.parse(t).hostname},getPort:function(t){return t=t||window.location.href,this.parse(t).port},getRoute:function(t){return t=t||window.location.href,this.parse(t).pathname},getRouteAttributes:function(t){return this.getRoute(t).split("/")},getQuerystring:function(t){return t=t||window.location.href,this.parse(t).search},getOption:function(t,r){r=r||window.location.href;var e=this.parse(r).searchObject;return"string"==typeof t?!0===e.hasOwnProperty(t)?e[t]:null:e},getHash:function(t){return t=t||window.location.href,this.parse(t).hash}}});